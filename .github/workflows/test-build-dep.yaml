name: Test-Build-Deploy
on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]

# Environment variables available to all jobs and steps in this workflow
env:
  FRONTEND_REGISTRY_NAME: 'presalytics/workspace'
  API_REGISTRY_NAME: 'presalytics/workspace-api'
  CLUSTER_NAME: 'production'
  CLUSTER_RESOURCE_GROUP: 'presalytics-prod'

jobs:
  # test-api:
  #   runs-on: "ubuntu-latest"
  #   env:
  #     DJANGO_SETTINGS_MODULE: api.settings.test
  #     REDIS_PASSWORD: dummy-pass
  #     WORKSPACE_CLIENT_URL: http://test-url
  #     CLIENT_ID: test-client-id
  #     STORY_HOST: https://api.presalytics.io/story/
  #     SITE_HOST: https://presalytics.io/
  #     OOXML_AUTOMATION_HOST: https://api.presalytics.io/ooxml-automation/
  #   defaults:
  #     run:
  #       working-directory: api
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Setup python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.6.9'
  #   - name: Test
  #     run: |
  #       python -m pip install --upgrade pip
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #       python manage.py test
  build-api: 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
    - uses: actions/checkout@master
    - name: Build and push Docker image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: 'presalytics/workspace-api'
        path: ./api
        platforms: linux/amd64,linux/arm64
        tag_with_ref: true
        tag_with_sha: true

  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: frontend
    env:
      VUE_APP_AUTH0_DOMAIN: login.presalytics.io
      VUE_APP_AUTH0_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      VUE_APP_AUTH0_AUDIENCE: https://api.presalytics.io/
      VUE_APP_AUTH0_SCOPE: 'openid profile offline_access'
      VUE_APP_I18N_LOCALE: en
      VUE_APP_I18N_FALLBACK_LOCALE: en
      VUE_APP_ENCRYPTION_KEY: ${{ secrets.CLIENT_ENCRYPTION_KEY }}
      VUE_APP_STORY_HOST: https://testing.presalytics.io/story
      VUE_APP_SITE_HOST: https://presalytics.io
      VUE_APP_OOXML_AUTOMATION_HOST: https://api.presalytics.io/ooxml-automation
      VUE_APP_WORKSPACE_API_URL: https://workspace-api.presalytics.io
      VUE_APP_EVENTS_API_URL: https://api.presalytics.io/

    steps:
    - uses: actions/checkout@master
    - name: Create .env.production
      run: printenv > .env.production
    - name: Build and push Docker image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: 'presalytics/workspace'
        path: ./frontend
        tag_with_ref: true
        tag_with_sha: true

  deploy-api:
    if: github.ref == 'refs/heads/master'
    needs: [build-api]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Azure Kubernetes set context
      # https://github.com/Azure/aks-set-context/
      uses: azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
        cluster-name: ${{ env.CLUSTER_NAME }}
      id: login
      # https://github.com/Azure/k8s-deploy/
    - name: Deploy to k8s
      uses: Azure/k8s-deploy@v1.4
      with:
        namespace: api
        # Specify what manifest file or files to use - for now, the comms manifest files are in the manifests folder in the comms repo
        manifests: |
          manifests/frontend-service.yaml
          manifests/api-service.yaml

  deploy-frontend:
    if: github.ref == 'refs/heads/master'
    needs: [build-frontend]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Azure Kubernetes set context
      # https://github.com/Azure/aks-set-context/
      uses: azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
        cluster-name: ${{ env.CLUSTER_NAME }}
      id: login
      # https://github.com/Azure/k8s-deploy/
    - name: Deploy to k8s
      uses: Azure/k8s-deploy@v1.4
      with:
        namespace: public
        # Specify what manifest file or files to use - for now, the comms manifest files are in the manifests folder in the comms repo
        manifests: |
          manifests/frontend-service.yaml
          manifests/api-service.yaml