name: test-and-build
on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]

# Environment variables available to all jobs and steps in this workflow
env:
  FRONTEND_REGISTRY_NAME: 'presalytics/workspace'
  API_REGISTRY_NAME: 'presalytics/workspace-api'
  CLUSTER_NAME: 'prod'
  CLUSTER_RESOURCE_GROUP: 'presalytics-prod'
  NAMESPACE: 'public'

jobs:
  test-api:
    runs-on: "ubuntu-latest"
    env:
      DJANGO_SETTINGS_MODULE: api.settings.test
      REDIS_PASSWORD: dummy-pass
      WORKSPACE_CLIENT_URL: http://test-url
      CLIENT_ID: test-client-id
      STORY_HOST: https://api.presalytics.io/story/
      SITE_HOST: https://presalytics.io/
      OOXML_AUTOMATION_HOST: https://api.presalytics.io/ooxml-automation/
    defaults:
      run:
        working-directory: api
    steps:
    - uses: actions/checkout@master
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6.9'
    - name: Test
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python manage.py test
  build-api: 
    needs: test-api
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
    - uses: actions/checkout@master
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      # https://github.com/docker/setup-buildx-action
      uses: docker/setup-buildx-action@v1.0.4
      id: buildx
      with:
        install: true
    - name: Login to Docker Hub
      run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        # load: true
        tags: |
          ${{ env.API_REGISTRY_NAME }}:latest
  
  deploy:
    needs: test-api
    runs-on: ubuntu-latest
    steps:
    - name: Azure Kubernetes set context
      # https://github.com/Azure/aks-set-context/
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
        cluster-name: ${{ env.CLUSTER_NAME }}
      id: login
      # https://github.com/Azure/k8s-deploy/
    - name: Deploy to k8s
      uses: Azure/k8s-deploy@v1.3
      with:
        namespace: ${{ env.NAMESPACE }}
        # Specify what manifest file or files to use - for now, the comms manifest files are in the manifests folder in the comms repo
        manifests: |
          manifests/api-deployment.yml
          manifests/api-service.yml
          manifests/frontend-deployment.yaml
          manifests/frontend-service,yaml
